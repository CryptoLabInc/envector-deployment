{{- /* Creates ExternalSecret for the license token when External Secrets Operator is enabled */ -}}
{{- if and .Values.externalSecrets.enabled .Values.es2c.license.enabled (ne (.Values.externalSecrets.license.remoteRef.key | default "") "") }}
{{- $defaultSecretName := printf "%s-es2c-license" (include "es2-chart.fullname" .) -}}
{{- $secretName := (default $defaultSecretName .Values.externalSecrets.license.name) -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $secretName }}
  labels:
    app: {{ include "es2-chart.fullname" . }}
    component: eso-license
spec:
  refreshInterval: {{ .Values.externalSecrets.license.refreshInterval | default "1m" | quote }}
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStoreRef.name | required "externalSecrets.secretStoreRef.name is required when externalSecrets.enabled=true" }}
    kind: {{ .Values.externalSecrets.secretStoreRef.kind | default "ClusterSecretStore" | quote }}
  target:
    name: {{ $secretName }}
    creationPolicy: Owner
  data:
    - secretKey: {{ .Values.externalSecrets.license.secretKey | default "token.jwt" | quote }}
      remoteRef:
        key: {{ .Values.externalSecrets.license.remoteRef.key | quote }}
        {{- if .Values.externalSecrets.license.remoteRef.property }}
        property: {{ .Values.externalSecrets.license.remoteRef.property | quote }}
        {{- end }}
{{- end }}
