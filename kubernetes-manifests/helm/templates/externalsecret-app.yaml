{{- /* Creates ExternalSecret for application sensitive values when External Secrets Operator is enabled */ -}}
{{- if and .Values.externalSecrets.enabled (gt (len .Values.externalSecrets.appSecret.data) 0) }}
{{- $defaultAppSecretName := printf "%s-eso" (include "es2-chart.fullname" .) -}}
{{- $appSecretName := (default $defaultAppSecretName .Values.externalSecrets.appSecret.name) -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $appSecretName }}
  labels:
    app: {{ include "es2-chart.fullname" . }}
    component: eso-app
spec:
  refreshInterval: {{ .Values.externalSecrets.appSecret.refreshInterval | default "1m" | quote }}
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStoreRef.name | required "externalSecrets.secretStoreRef.name is required when externalSecrets.enabled=true" }}
    kind: {{ .Values.externalSecrets.secretStoreRef.kind | default "ClusterSecretStore" | quote }}
  target:
    name: {{ $appSecretName }}
    creationPolicy: Owner
  data:
    {{- range .Values.externalSecrets.appSecret.data }}
    - secretKey: {{ .secretKey | quote }}
      remoteRef:
        key: {{ .remoteRef.key | quote }}
        {{- if .remoteRef.property }}
        property: {{ .remoteRef.property | quote }}
        {{- end }}
    {{- end }}
{{- end }}
