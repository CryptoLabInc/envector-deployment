# docker-compose.infra.yml
services:
  metadatadb:
    image: postgres:14.9
    restart: always
    command: ["postgres", "-c", "max_wal_size=8GB", "-c", "checkpoint_timeout=10min", "-c", "max_connections=100"]
    # volumes:
    #   - ${DOCKER_VOLUME_DIRECTORY:-./volumes}/pgdata:/var/lib/postgresql/data
    # ports:
    #   - ${ES2_DB_SERVICE_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=${ES2_DB_SERVICE_USER:-myuser}
      - POSTGRES_PASSWORD=${ES2_DB_SERVICE_PASSWORD:-.}
      - POSTGRES_DB=${ES2_DB_SERVICE_NAME:-mydatabase}
      - POSTGRES_SCHEMA=${ES2_DB_SERVICE_SCHEMA:-public}

  storage:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    restart: always
    environment:
      MINIO_ROOT_USER: ${ES2_STORAGE_SERVICE_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${ES2_STORAGE_SERVICE_PASSWORD:-.}
    command: server /data --address ":${ES2_STORAGE_SERVICE_PORT:-59000}" --console-address ":${ES2_STORAGE_SERVICE_CONSOLE_PORT:-59001}"
    # volumes:
    #   - ${DOCKER_VOLUME_DIRECTORY:-./volumes}/minio/data:/data
    # ports:
    #   - ${ES2_STORAGE_SERVICE_PORT:-59000}:${ES2_STORAGE_SERVICE_PORT:-59000}
    #   - ${ES2_STORAGE_SERVICE_CONSOLE_PORT:-59001}:${ES2_STORAGE_SERVICE_CONSOLE_PORT:-59001}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${ES2_STORAGE_SERVICE_PORT:-59000}/minio/health/live"]
      interval: 2s
      timeout: 5s
      retries: 5

  es2b:
    depends_on:
      storage:
        condition: service_healthy
      metadatadb:
        condition: service_started

  es2o:
    depends_on:
      storage:
        condition: service_healthy
      metadatadb:
        condition: service_started

networks:
  default:
